{"version":3,"sources":["firebase.js","Components/UseFirestore.js","Components/ImageGrid.js","Components/UseStorage.js","Components/Progressbar.js","Components/UploadForm.js","Components/Modal.js","Components/PhotoGrid.js","App.js","reportWebVitals.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","storage","timestamp","FieldValue","serverTimestamp","UseFirestore","collection","useState","docs","setDocs","useEffect","unsub","orderBy","onSnapshot","snap","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","className","map","motion","div","onClick","url","layout","whileHover","opacity","img","src","alt","initial","animate","transition","delay","UseStorage","file","progress","setProgress","error","setError","setUrl","storageRef","ref","name","collectionRef","put","on","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","Progressbar","props","setFile","console","log","width","UploadForm","types","type","accept","onChange","e","selected","target","files","includes","Modal","selectedImg","classList","contains","y","makeStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","icon","color","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b35b523a.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst app = firebase.initializeApp({\n\tapiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n\tauthDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n\t// databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n\tprojectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n\tstorageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n\tmessagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n\tappId: process.env.REACT_APP_FIREBASE_APP_ID,\n});\n\nexport const auth = app.auth();\nexport const firestore = app.firestore();\nexport const storage = app.storage();\nexport const timestamp = firebase.firestore.FieldValue.serverTimestamp;\nexport default app;\n","import { useState, useEffect } from 'react';\n\nimport { firestore } from '../firebase';\n\nconst UseFirestore = (collection) => {\n\tconst [docs, setDocs] = useState([]);\n\tuseEffect(() => {\n\t\tconst unsub = firestore\n\t\t\t.collection(collection)\n\t\t\t.orderBy('createdAt', 'desc')\n\t\t\t.onSnapshot((snap) => {\n\t\t\t\tlet documents = [];\n\t\t\t\tsnap.forEach((doc) => {\n\t\t\t\t\tdocuments.push({ ...doc.data(), id: doc.id });\n\t\t\t\t});\n\t\t\t\tsetDocs(documents);\n\t\t\t});\n\t\treturn () => unsub();\n\t}, [collection]);\n\n\treturn { docs };\n};\nexport default UseFirestore;\n","import React from 'react';\nimport UseFirestore from './UseFirestore';\nimport { motion } from 'framer-motion';\n\nfunction ImageGrid({ setSelectedImg }) {\n\tconst { docs } = UseFirestore('images');\n\n\treturn (\n\t\t<div className='img-grid'>\n\t\t\t{docs &&\n\t\t\t\tdocs.map((doc) => (\n\t\t\t\t\t<motion.div\n\t\t\t\t\t\tclassName='img-wrap'\n\t\t\t\t\t\tkey={doc.id}\n\t\t\t\t\t\tonClick={() => setSelectedImg(doc.url)}\n\t\t\t\t\t\tlayout\n\t\t\t\t\t\twhileHover={{ opacity: 1 }}>\n\t\t\t\t\t\t<motion.img\n\t\t\t\t\t\t\tsrc={doc.url}\n\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t\tinitial={{ opacity: 0 }}\n\t\t\t\t\t\t\tanimate={{ opacity: 1 }}\n\t\t\t\t\t\t\ttransition={{ delay: 1 }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</motion.div>\n\t\t\t\t))}\n\t\t</div>\n\t);\n}\n\nexport default ImageGrid;\n","import { useState, useEffect } from 'react';\n\nimport { storage, firestore, timestamp } from '../firebase';\n\nconst UseStorage = (file) => {\n\tconst [progress, setProgress] = useState(0);\n\tconst [error, setError] = useState(null);\n\tconst [url, setUrl] = useState(null);\n\n\tuseEffect(() => {\n\t\t//references\n\t\tconst storageRef = storage.ref(file.name);\n\t\tconst collectionRef = firestore.collection('images');\n\t\tstorageRef.put(file).on(\n\t\t\t'state_changed',\n\t\t\t(snap) => {\n\t\t\t\tlet percentage =\n\t\t\t\t\t(snap.bytesTransferred / snap.totalBytes) * 100;\n\t\t\t\tsetProgress(percentage);\n\t\t\t},\n\t\t\t(err) => {\n\t\t\t\tsetError(err);\n\t\t\t},\n\t\t\tasync () => {\n\t\t\t\tconst url = await storageRef.getDownloadURL();\n\t\t\t\tconst createdAt = timestamp();\n\t\t\t\tcollectionRef.add({\n\t\t\t\t\turl,\n\t\t\t\t\tcreatedAt,\n\t\t\t\t});\n\t\t\t\tsetUrl(url);\n\t\t\t},\n\t\t);\n\t}, [file]);\n\treturn { progress, url, error };\n};\n\nexport default UseStorage;\n","import React, { useEffect } from 'react';\nimport UseStorage from './UseStorage';\nimport { motion } from 'framer-motion';\n\nfunction Progressbar(props) {\n\tconst { file, setFile } = props;\n\tconst { url, progress } = UseStorage(file);\n\tconsole.log(progress, url);\n\tuseEffect(() => {\n\t\tif (url) {\n\t\t\tsetFile(null);\n\t\t}\n\t}, [url, setFile]);\n\treturn (\n\t\t<motion.div\n\t\t\tclassName='progress-bar'\n\t\t\tinitial={{ width: 0 }}\n\t\t\tanimate={{ width: progress + '%' }}></motion.div>\n\t);\n}\n\nexport default Progressbar;\n","import React, { useState } from 'react';\nimport Progressbar from './Progressbar';\n\nfunction UploadForm() {\n\tconst [file, setFile] = useState(null);\n\tconst [error, setError] = useState(null);\n\tconst types = ['image/png', 'image/jpeg'];\n\tconst changeHandler = e => {\n\t\tlet selected = e.target.files[0];\n\t\tif (selected) {\n\t\t\tif (types.includes(selected.type)) {\n\t\t\t\tsetFile(selected);\n\t\t\t\tsetError('');\n\t\t\t} else {\n\t\t\t\tsetError('Please select an image file (png or jpeg)');\n\t\t\t\tsetFile(null);\n\t\t\t}\n\t\t} else {\n\t\t\tsetFile(null);\n\t\t\tsetError('');\n\t\t}\n\t};\n\n\treturn (\n\t\t<form>\n\t\t\t<label>\n\t\t\t\t<input type='file' accept='image/*' onChange={changeHandler} />\n\t\t\t\t<span>+ Add</span>\n\t\t\t</label>\n\n\t\t\t<div className='output'>\n\t\t\t\t{error && <div className='error'>{error}</div>}\n\t\t\t\t{file && <div>{file.name}</div>}\n\t\t\t\t{file && <Progressbar file={file} setFile={setFile} />}\n\t\t\t</div>\n\t\t</form>\n\t);\n}\n\nexport default UploadForm;\n","import React from 'react';\nimport { motion } from 'framer-motion';\n\nfunction Modal({ selectedImg, setSelectedImg }) {\n\tconst handleClick = (e) => {\n\t\tif (e.target.classList.contains('backdrop')) {\n\t\t\tsetSelectedImg(null);\n\t\t}\n\t};\n\treturn (\n\t\t<motion.div\n\t\t\tclassName='backdrop'\n\t\t\tonClick={handleClick}\n\t\t\tinitial={{ opacity: 0 }}\n\t\t\tanimate={{ opacity: 1 }}>\n\t\t\t<motion.img\n\t\t\t\tsrc={selectedImg}\n\t\t\t\talt=''\n\t\t\t\tclassName='enlarged-pic'\n\t\t\t\tinitial={{ y: '-100vh' }}\n\t\t\t\tanimate={{ y: 0 }}\n\t\t\t/>\n\t\t</motion.div>\n\t);\n}\n\nexport default Modal;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nconst imageData = [];\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\tdisplay: 'flex',\n\t\tflexWrap: 'wrap',\n\t\tjustifyContent: 'space-around',\n\t\toverflow: 'hidden',\n\t\tbackgroundColor: theme.palette.background.paper,\n\t},\n\tgridList: {},\n\ticon: {\n\t\tcolor: 'rgba(255, 255, 255, 0.54)',\n\t},\n}));\n\nfunction PhotoGrid() {\n\tconsole.log(imageData);\n\tconst classes = useStyles();\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<GridList cellHeight={180} className={classes.gridList}>\n\t\t\t\t<GridListTile key='Subheader' cols={4} style={{ height: 'auto' }}>\n\t\t\t\t\t<ListSubheader component='div'>December</ListSubheader>\n\t\t\t\t</GridListTile>\n\t\t\t\t{imageData.map(tile => (\n\t\t\t\t\t<GridListTile key={tile.img}>\n\t\t\t\t\t\t<img src={tile.img} alt={tile.title} />\n\t\t\t\t\t\t<GridListTileBar\n\t\t\t\t\t\t\ttitle={tile.title}\n\t\t\t\t\t\t\tsubtitle={<span>by: {tile.author}</span>}\n\t\t\t\t\t\t\tactionIcon={\n\t\t\t\t\t\t\t\t<IconButton aria-label={`info about ${tile.title}`} className={classes.icon}>\n\t\t\t\t\t\t\t\t\t<InfoIcon />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</GridListTile>\n\t\t\t\t))}\n\t\t\t</GridList>\n\t\t</div>\n\t);\n}\n\nexport default PhotoGrid;\n","import './App.css';\nimport ImageGrid from './Components/ImageGrid';\nimport UploadForm from './Components/UploadForm';\nimport Modal from './Components/Modal';\nimport { useState } from 'react';\nimport PhotoGrid from './Components/PhotoGrid';\nfunction App() {\n\tconst [selectedImg, setSelectedImg] = useState(null);\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t{/* <PhotoGrid /> */}\n\t\t\t<UploadForm />\n\t\t\t<ImageGrid setSelectedImg={setSelectedImg} />\n\t\t\t{selectedImg && <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg} />}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}